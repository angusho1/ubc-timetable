[{"/Users/angusho/Documents/JavaScript/timetable-react/src/index.js":"1","/Users/angusho/Documents/JavaScript/timetable-react/src/reportWebVitals.js":"2","/Users/angusho/Documents/JavaScript/timetable-react/src/App.js":"3","/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableCell.js":"4","/Users/angusho/Documents/JavaScript/timetable-react/src/components/Timetable.js":"5","/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableRow.js":"6","/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimeSlotCell.js":"7","/Users/angusho/Documents/JavaScript/timetable-react/src/components/AppControl.js":"8","/Users/angusho/Documents/JavaScript/timetable-react/src/components/SearchForm.js":"9","/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableControl.js":"10","/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableMenu.js":"11","/Users/angusho/Documents/JavaScript/timetable-react/src/components/SearchInput.js":"12","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/ResultDisplay.js":"13","/Users/angusho/Documents/JavaScript/timetable-react/src/data/SearchType.js":"14","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/DeptResultDisplay.js":"15","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/CourseResultDisplay.js":"16","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/SectionResultDisplay.js":"17","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/ResultDisplayItem.js":"18","/Users/angusho/Documents/JavaScript/timetable-react/src/store.js":"19","/Users/angusho/Documents/JavaScript/timetable-react/src/reducers/timetableSlice.js":"20","/Users/angusho/Documents/JavaScript/timetable-react/src/reducers/searchSlice.js":"21"},{"size":616,"mtime":1612156688973,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1609355051929,"results":"24","hashOfConfig":"23"},{"size":271,"mtime":1609442683334,"results":"25","hashOfConfig":"23"},{"size":696,"mtime":1609995606631,"results":"26","hashOfConfig":"23"},{"size":1591,"mtime":1609995589882,"results":"27","hashOfConfig":"23"},{"size":829,"mtime":1609544258901,"results":"28","hashOfConfig":"23"},{"size":264,"mtime":1609395893098,"results":"29","hashOfConfig":"23"},{"size":7535,"mtime":1610924795760,"results":"30","hashOfConfig":"23"},{"size":5659,"mtime":1609912615328,"results":"31","hashOfConfig":"23"},{"size":3629,"mtime":1612329522094,"results":"32","hashOfConfig":"23"},{"size":598,"mtime":1609637048836,"results":"33","hashOfConfig":"23"},{"size":1495,"mtime":1609739441531,"results":"34","hashOfConfig":"23"},{"size":497,"mtime":1610777879852,"results":"35","hashOfConfig":"23"},{"size":98,"mtime":1610430679072,"results":"36","hashOfConfig":"23"},{"size":1183,"mtime":1610838113953,"results":"37","hashOfConfig":"23"},{"size":1553,"mtime":1610840604055,"results":"38","hashOfConfig":"23"},{"size":1969,"mtime":1610923616166,"results":"39","hashOfConfig":"23"},{"size":278,"mtime":1610777639175,"results":"40","hashOfConfig":"23"},{"size":286,"mtime":1611297698520,"results":"41","hashOfConfig":"23"},{"size":6464,"mtime":1612156904172,"results":"42","hashOfConfig":"23"},{"size":590,"mtime":1612328500371,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13pnfj9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/angusho/Documents/JavaScript/timetable-react/src/index.js",[],["90","91"],"/Users/angusho/Documents/JavaScript/timetable-react/src/reportWebVitals.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/App.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableCell.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/Timetable.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableRow.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimeSlotCell.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/AppControl.js",["92"],"import React, { Component } from 'react';\nimport { SearchType } from '../data/SearchType';\nimport ResultDisplay from './result-displays/ResultDisplay';\nimport SearchForm from './SearchForm';\nimport TimetableControl from './TimetableControl';\nimport DeptResultDisplay from './result-displays/DeptResultDisplay';\nimport CourseResultDisplay from './result-displays/CourseResultDisplay';\nimport SectionResultDisplay from './result-displays/SectionResultDisplay';\n\nexport class AppControl extends Component {\n    timetableControl = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            addedSections: [],\n            objectOnDisplay: null,\n            typeObjectOnDisplay: null,\n            currentCourseKey: null,\n            currentSectionKey: null\n        }\n\n        this.coursesData = null;\n        this.buildingData = null;\n    }\n\n    searchDept(dept) {\n        console.log(`Department Search: ${dept}`);\n        // todo: Search\n\n        this.fetchDept(dept)\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    objectOnDisplay: res,\n                    typeObjectOnDisplay: SearchType.DEPT\n                });\n            })\n            .catch((e) => {\n                this.handleDeptSearchFail(dept, e);\n            });\n    }\n\n    searchCourse(dept, course) {\n        console.log(`Course Search: ${dept} ${course}`);\n\n        this.fetchCourse(dept, course)\n        .then((res) => {\n            console.log(res);\n            this.setState({\n                objectOnDisplay: res,\n                typeObjectOnDisplay: SearchType.COURSE,\n                currentCourseKey: course\n            });\n        })\n        .catch((e) => {\n            this.handleCourseSearchFail(course, e);\n        });\n    }\n\n    searchSection(dept, course, section) {\n        console.log(`Section Search: ${dept} ${course} ${section}`);\n\n        this.fetchSection(dept, course, section)\n        .then((res) => {\n            console.log(res);\n            this.setState({\n                objectOnDisplay: res,\n                typeObjectOnDisplay: SearchType.SECTION,\n                currentCourseKey: course,\n                currentSectionKey: section\n            });\n        })\n        .catch((e) => {\n            this.handleSectionSearchFail(course, e);\n        });\n    }\n\n    async temporaryFetch() {\n\n        await fetch('/courseData.json') \n            // .then(res => console.log(res));\n            .then(res => res.json())\n            .then(data => {\n                this.coursesData = data;\n                // console.log(data);\n            });\n\n        await fetch('/buildings.json')\n            .then(res => res.json())\n            .then(data => {\n                this.buildingData = data;\n                // console.log(data);\n            });\n    }\n\n    async fetchDept(dept) {\n        const searchkey = formatKey(dept);\n        if (!this.coursesData) {\n            await this.temporaryFetch();\n        }\n        const deptSearchResult = this.coursesData.departments[searchkey];\n        if (!deptSearchResult) {\n            throw new Error(`${dept} is not a valid department`);\n        }\n        return Promise.resolve(deptSearchResult);\n    }\n\n    async fetchCourse(dept, course) {\n        const deptKey = formatKey(dept);\n        const courseKey = formatKey(course);\n        if (!this.coursesData) {\n            await this.temporaryFetch();\n        }\n        const deptSearchResult = this.coursesData.departments[deptKey];\n        if (!deptSearchResult) {\n            throw new Error(`${dept} is not a valid department`);\n        }\n        const courseSearchResult = deptSearchResult.courses[courseKey];\n        if (!courseSearchResult) {\n            throw new Error(`${dept} ${course} is not a valid course`);\n        }\n        return Promise.resolve(deptSearchResult);\n    }\n\n    async fetchSection(dept, course, section) {\n        const deptKey = formatKey(dept);\n        const courseKey = formatKey(course);\n        const sectionKey = formatKey(section);\n\n        if (!this.coursesData) {\n            await this.temporaryFetch();\n        }\n        const deptSearchResult = this.coursesData.departments[deptKey];\n        if (!deptSearchResult) {\n            throw new Error(`${dept} is not a valid department`);\n        }\n        const courseSearchResult = deptSearchResult.courses[courseKey];\n        if (!courseSearchResult) {\n            throw new Error(`${dept} ${course} is not a valid course`);\n        }\n        const sectionSearchResult = courseSearchResult.sections[sectionKey];\n        if (!sectionSearchResult) {\n            throw new Error(`${dept} ${course} ${section} is not a valid section`);\n        }\n        return Promise.resolve(deptSearchResult);\n    }\n\n    handleDeptSearchFail(dept, e) {\n        console.log(e.message);\n    }\n\n    handleCourseSearchFail(course, e) {\n        console.log(e.message);\n    }\n\n    handleSectionSearchFail(section, e) {\n        console.log(e.message);\n    }\n\n    addSection(deptObj, course, section) {\n        \n    }\n\n    handleAddRemoveSection = () => {\n        console.log(this.timetableControl);\n        if (this.isSectionAdded()) {\n            \n        } else {\n            this.timetableControl.addSection('table1', this.state.objectOnDisplay, this.state.currentCourseKey, this.state.currentSectionKey);\n        }\n    }\n\n    isSectionAdded = () => {\n        const sectionCode = this.getCurrentSectionCode();\n        return this.state.addedSections.includes(sectionCode);\n    }\n\n    getCurrentSectionCode() {\n        const deptKey = this.state.objectOnDisplay.subjCode;\n        return `${deptKey} ${this.state.currentCourseKey} ${this.state.currentSectionKey}`;\n    }\n\n    renderResultDisplay() {\n        const type = this.state.typeObjectOnDisplay;\n        const objectOnDisplay = this.state.objectOnDisplay;\n        if (type === SearchType.DEPT) {\n            return (<DeptResultDisplay objectOnDisplay={objectOnDisplay} />);\n        } else if (type === SearchType.COURSE) {\n            return (<CourseResultDisplay objectOnDisplay={objectOnDisplay}\n                                        courseKey={this.state.currentCourseKey} />);\n        } else if (type === SearchType.SECTION) {\n            return (<SectionResultDisplay objectOnDisplay={objectOnDisplay}\n                                        courseKey={this.state.currentCourseKey}\n                                        sectionKey={this.state.currentSectionKey}\n                                        handleAddRemoveSection={this.handleAddRemoveSection}\n                                        isSectionAdded={this.isSectionAdded()} />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">   \n                <div className=\"search-wrapper\">\n                    <SearchForm searchDept={this.searchDept.bind(this)}\n                                searchCourse={this.searchCourse.bind(this)}\n                                searchSection={this.searchSection.bind(this)}\n                                />\n                    {this.renderResultDisplay()}\n                    {/* <ResultDisplay  searchType={this.typeObjectOnDisplay}\n                                    objectOnDisplay={this.objectOnDisplay}\n                                    /> */}\n                </div>\n                <TimetableControl />\n            </div>\n        )\n    }\n}\n\nfunction formatKey(key) {\n    return key.toUpperCase().replace(/\\s+/g, '');\n}\n\nexport default AppControl;\n","/Users/angusho/Documents/JavaScript/timetable-react/src/components/SearchForm.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableControl.js",["93","94","95","96","97"],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/TimetableMenu.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/SearchInput.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/ResultDisplay.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/data/SearchType.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/DeptResultDisplay.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/CourseResultDisplay.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/SectionResultDisplay.js",["98"],"import React, { Component } from 'react';\nimport ResultDisplay from './ResultDisplay';\nimport ResultDisplayItem from './ResultDisplayItem';\n\nexport class SectionResultDisplay extends Component {\n    getTitle() {\n        const sectionObj = this.getSectionObj();\n        const sectionCode = sectionObj.sectionCode;\n        const activity = sectionObj.activity;\n        return `${sectionCode} (${activity})`;\n    }\n\n    getSubHeading() {\n        const courseObj = this.getCourseObj();\n        return courseObj.courseTitle;\n    }\n\n    renderDisplayComponents() {\n        const courseObj = this.getCourseObj();\n        const sectionObj = this.getSectionObj();\n        const classObjects = sectionObj.classes;\n        return (<div>\n            { this.renderInstructorDisplay() }\n            <p>Credits: <b>{courseObj.credits}</b></p>\n            <p>Total Seats Remaining: <b>{sectionObj.totalSeatsRem}</b></p>\n            { this.renderAddRemoveButton() }\n            { this.renderClassDisplays(classObjects) }\n        </div>);\n    }\n\n    renderInstructorDisplay() {\n        // TODO\n    }\n\n    renderAddRemoveButton() {\n        return (\n            <button className=\"btn small-btn\" onClick={this.props.handleAddRemoveSection}>\n                { this.getSectionButtonLabel() }\n            </button>\n        );\n    }\n\n    renderClassDisplays(classObjects) {\n        // TODO\n    }\n\n    getSectionButtonLabel() {\n        return this.props.isSectionAdded ? '- Remove Section' : '+ Add Section';\n    }\n\n    getCourseObj() {\n        return this.props.objectOnDisplay.courses[this.props.courseKey];\n    }\n\n    getSectionObj() {\n        return this.getCourseObj().sections[this.props.sectionKey];\n    }\n\n    render() {\n        return (\n            <ResultDisplay  title={this.getTitle()}\n                            subHeading={this.getSubHeading()}>\n                {this.renderDisplayComponents()}\n            </ResultDisplay>\n        )\n    }\n}\n\nexport default SectionResultDisplay\n","/Users/angusho/Documents/JavaScript/timetable-react/src/components/result-displays/ResultDisplayItem.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/store.js",[],"/Users/angusho/Documents/JavaScript/timetable-react/src/reducers/timetableSlice.js",["99"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst DEFAULT_STARTTIME = 9;\nconst DEFAULT_ENDTIME = 18;\nconst DAY_MAP = {'Sun' : 0, 'Mon' : 1, 'Tue' : 2, 'Wed' : 3, 'Thu' : 4, 'Fri' : 5, 'Sat' : 6};\n\nconst initialState = {\n    currentTableKey: 'table1',\n    table1: {\n        startTime: DEFAULT_STARTTIME,\n        endTime: DEFAULT_ENDTIME,\n        term: '2020 W1',\n        matrix: initMatrix()\n    },\n    table2: {\n        startTime: DEFAULT_STARTTIME,\n        endTime: DEFAULT_ENDTIME,\n        term: '2020 W2',\n        matrix: initMatrix()\n    }\n}\n\nexport const timetableSlice = createSlice({\n    name: 'timetable',\n    initialState,\n    reducers: {\n        addSection: (state, action) => {\n            const { tableKey, deptObj, course, section } = action.payload;\n            addSection1(state, tableKey, deptObj, course, section)\n        },\n        removeSection: (state, action) => {\n            const { tableKey, sectionObj } = action.payload;\n            removeSection1(state, tableKey, sectionObj);\n        }\n    }\n});\n\nfunction initMatrix() {\n    let matrix = new Array(7);\n    const numRows = (DEFAULT_ENDTIME - DEFAULT_STARTTIME) * 2;\n    for (let i = 0; i < numRows; i++) {\n        matrix[i] = Array(7);\n        for (let j = 0; j < 7; j++) {\n            matrix[i][j] = initCell();\n        }\n    }\n    return matrix;\n}\n\nfunction initCell() {\n    return {\n        occupied: false,\n        replaced: false,\n        rowSpan: 1,\n        courseInfo: null,\n        label: ''\n    };\n}\n\nfunction addSection1(state, tableKey, deptObj, course, section) {\n    const sectionObj = deptObj.courses[course].sections[section];\n    const table = state[tableKey];\n    // let updatedMatrix = table.matrix.slice();\n    let matrix = table.matrix;\n    let startTime = table.startTime;\n    let endTime = table.endTime;\n\n    for (let classObj of sectionObj.classes) {\n        const classStartTime = convertTimeToNumber(classObj.start);\n        const classEndTime = convertTimeToNumber(classObj.end);\n        const classLength = (classEndTime - classStartTime) * 2;\n        const days = classObj.days.trim().split(' ');\n\n        if (classStartTime < startTime) {\n            insertRowsAtStart(matrix, classStartTime, startTime);\n            startTime = classStartTime;\n        }\n        if (classEndTime > endTime) {\n            insertRowsAtEnd(matrix, classEndTime, endTime);\n            endTime = classEndTime;\n        }\n\n        let courseInfo = { deptObj, course, section };\n        let label = getCellLabel(deptObj, course, section);\n\n        days.forEach(day => {\n            let column = DAY_MAP[day];\n            let row = (classStartTime - startTime) * 2;\n\n            updateCellsAdded(matrix, row, column, courseInfo, label, classLength);\n\n            // cellObj.cell.addEventListener('click', e => {\n            //     displaySectionRes(cellObj.deptObj, cellObj.courseObj, cellObj.sectionObj);\n            // });\n        });\n    }\n\n    table.currentTableKey = tableKey;\n    table.startTime = startTime;\n    table.endTime = endTime;\n\n    // this.setState({\n    //     currentTableKey: tableKey,\n    //     [tableKey]: {\n    //         startTime,\n    //         endTime,\n    //         term: table.term,\n    //         matrix: matrix\n    //     }\n    // });\n}\n\nfunction removeSection1(state, tableKey, sectionObj) {\n    const table = state[tableKey];\n    let matrix = table.matrix;\n\n    for (let classObj of sectionObj.classes) {\n        const classStartTime = convertTimeToNumber(classObj.start);\n        const days = classObj.days.trim().split(' ');\n\n        days.forEach(day => {\n            let column = DAY_MAP[day];\n            let row = (classStartTime - table.startTime) * 2;\n            updateCellsRemoved(matrix, row, column);\n        });\n    }\n\n    // this.setState({\n    //     currentTableKey: tableKey,\n    //     [tableKey]: {\n    //         startTime: table.startTime,\n    //         endTime: table.endTime,\n    //         term: table.term,\n    //         matrix: matrix\n    //     }\n    // });\n}\n\nfunction updateCellsAdded(matrix, row, column, courseInfo, label, classLength) {\n    const cell = matrix[row][column];\n    cell.occupied = true;\n    cell.rowSpan = classLength;\n    cell.courseInfo = courseInfo;\n    cell.label = label;\n\n    for (let i = 1; i < classLength; i++) {\n        let cellToReplace = matrix[row+i][column];\n        if (!cellToReplace.occupied) {\n            cellToReplace.replaced = true;\n            cellToReplace.occupied = true;\n        } else {\n            throw new Error('Cannot Remove - cell is occupied');\n        }\n    }\n}\n\nfunction updateCellsRemoved(matrix, row, column) {\n    const cell = matrix[row][column];\n    const rowSpan = cell.rowSpan;\n    cell.occupied = false;\n    cell.rowSpan = 1;\n    cell.courseInfo = null;\n    cell.label = '';\n    \n    for (let i = 1; i < rowSpan; i++) {\n        let cellToAdd = matrix[row+i][column];\n        if (cellToAdd.occupied) {\n            cellToAdd.occupied = false;\n            cellToAdd.replaced = false;\n        } else {\n            console.log('Nothing to remove');\n        }\n    }\n}\n\nfunction insertRowsAtStart(matrix, classStartTime, tableStartTime) {\n    const numRows = (tableStartTime - classStartTime) * 2;\n    for (let i = 0; i < numRows; i++) {\n        matrix.splice(i, 0, Array(7));\n        for (let j = 0; j < 7; j++) {\n            matrix[0][j] = this.initCell();\n        }\n    }\n}\n\nfunction insertRowsAtEnd(matrix, classEndTime, tableEndTime) {\n    const numRows = (classEndTime - tableEndTime) * 2;\n    for (let i = 0; i < numRows; i++) {\n        matrix.push(Array(7));\n        for (let j = 0; j < 7; j++) {\n            let lastIndex = matrix.length - 1;\n            matrix[lastIndex][j] = this.initCell();\n        }\n    }\n}\n\nfunction getCellLabel(deptObj, course, section) {\n    const sectionObj = deptObj.courses[course].sections[section];\n    return `${sectionObj.sectionCode} (${sectionObj.activity})`;\n}\n\n/**\n * converts time string formatted as \"HH:MM\" and returns a number\n * ex: 14:30 -> 14.5\n * \n * @param {string} str  the time string to convert\n * \n * @returns {number} the converted time\n */\nfunction convertTimeToNumber(str) {\n    const timeArray = str.split(':');\n    const hours = parseInt(timeArray[0]);\n    const minutes = parseInt(timeArray[1]) / 60;\n    // console.log(`${str} -> ${hours + minutes}`);\n    return hours + minutes;\n}\n\nexport const { addSection, removeSection } = timetableSlice.actions;\n\nexport default timetableSlice.reducer;","/Users/angusho/Documents/JavaScript/timetable-react/src/reducers/searchSlice.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"108","line":7,"column":7,"nodeType":"106","messageId":"107","endLine":7,"endColumn":24},{"ruleId":"104","severity":1,"message":"109","line":8,"column":7,"nodeType":"106","messageId":"107","endLine":8,"endColumn":22},{"ruleId":"104","severity":1,"message":"110","line":9,"column":7,"nodeType":"106","messageId":"107","endLine":9,"endColumn":14},{"ruleId":"104","severity":1,"message":"111","line":77,"column":10,"nodeType":"106","messageId":"107","endLine":77,"endColumn":29},{"ruleId":"104","severity":1,"message":"112","line":85,"column":10,"nodeType":"106","messageId":"107","endLine":85,"endColumn":22},{"ruleId":"104","severity":1,"message":"113","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":86,"column":22,"nodeType":"116","messageId":"117","endLine":95,"endColumn":10},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'ResultDisplay' is defined but never used.","Identifier","unusedVar","'DEFAULT_STARTTIME' is assigned a value but never used.","'DEFAULT_ENDTIME' is assigned a value but never used.","'DAY_MAP' is assigned a value but never used.","'convertTimeToNumber' is defined but never used.","'getCellLabel' is defined but never used.","'ResultDisplayItem' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'startTime'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]